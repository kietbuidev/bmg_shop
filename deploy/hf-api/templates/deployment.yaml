apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hf-api.fullname" . }}
  labels:
    {{- include "hf-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hf-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hf-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hf-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: dataupload
        persistentVolumeClaim:
        {{- if .Values.persistence.volumeName }}
          claimName: {{ .Values.persistence.volumeName | quote }}
        {{- else }}
          claimName: {{ template "hf-api.fullname" . }}
        {{- end }}
#      - name: {{ .Values.volume.name }}
#        hostPath:
#          path: {{ .Values.volume.hostPath }}
#          type: {{ .Values.volume.type }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          volumeMounts:
#          - mountPath: {{ .Values.volume.mountPath }}
#            name: {{ .Values.volume.name }}
          - mountPath: /app/uploads
            name: dataupload
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODE_ENV
              value: {{ .Values.env.nodeEnvironment }}
            - name: PORT
              value: "{{ .Values.env.port }}"
            - name: DB_HOST
              value: "{{ .Values.env.dbHost }}"
            - name: DB_NAME
              value: "{{ .Values.env.dbName }}"
            - name: DB_USER
              value: "{{ .Values.env.dbUser }}"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dbSecret.name }}
                  key: {{ .Values.dbSecret.key }}
            - name: DIACLECT
              value: "{{ .Values.env.dialect }}"
            - name: REDIS_HOSTS
              value: "{{ .Values.env.redisHost }}"
            - name: REDIS_PORT
              value: "{{ .Values.env.redisPort }}"
            - name: REDIS_MASTER_NAME
              value: "{{ .Values.env.redisMasterName }}"
            - name: ADMIN_URL
              value: "{{ .Values.env.adminUrl }}"
            - name: CLIENT_URL
              value: "{{ .Values.env.clientUrl }}"
            - name: EZC_API_URL
              value: "{{ .Values.env.ezcApiUrl }}"
            - name: EZC_API_KEY
              value: "{{ .Values.env.ezcApiKey }}"
            - name: EZC_SECRET_KEY
              value: "{{ .Values.env.ezcSecretKey }}"
            - name: TVP_PCC
              value: "{{ .Values.env.tvpPcc }}"
            - name: TVP_BRANCH_CODE
              value: "{{ .Values.env.tvpBranchCode }}"
            - name: TVP_USERNAME
              value: "{{ .Values.env.tvpUsername }}"
            - name: TVP_PASSWORD
              value: "{{ .Values.env.tvpPassword }}"
            - name: TVP_AUTH_BY
              value: "{{ .Values.env.tvpAuthBy }}"
            - name: TVP_BASE_URL
              value: "{{ .Values.env.tvpBaseUrl }}"
            - name: HPL_USER
              value: "{{ .Values.env.hplUser }}"
            - name: HPL_PASS
              value: "{{ .Values.env.hplPass }}"
            - name: HPL_PRODUCT_KEY
              value: "{{ .Values.env.hplProductKey }}"
            - name: HPL_AGENT_ACCOUNT
              value: "{{ .Values.env.hplAgentAccount }}"
            - name: HPL_AGENT_PASSWORD
              value: "{{ .Values.env.hplAgentPassword }}"
            - name: HPL_BASE_URL
              value: "{{ .Values.env.hplBaseUrl }}"
            - name: STRIPE_PUB_KEY
              value: "{{ .Values.env.stripePubKey }}"
            - name: STRIPE_SEC_KEY
              value: "{{ .Values.env.stripeSecKey }}"
            - name: VBI_DTAC_KEY
              value: "{{ .Values.env.vbiDtacKey }}"
            - name: VBI_NSD
              value: "{{ .Values.env.vbiNsd }}"
            - name: VBI_PRIVATE_KEY
              value: "{{ .Values.env.vbiPrivateKey }}"
            - name: VBI_CODE
              value: "{{ .Values.env.vbiCode }}"
            - name: VBI_NHOM
              value: "{{ .Values.env.vbiNhom }}"
            - name: VBI_BASE_URL
              value: "{{ .Values.env.vbiBaseUrl }}"
            - name: CARD_NUMBER
              value: "{{ .Values.env.cardNumber }}"
            - name: CARD_CVC
              value: "{{ .Values.env.cardCVC }}"
            - name: CARD_EXP
              value: "{{ .Values.env.cardEXP }}"
            - name: GG_KEY
              value: "{{ .Values.env.ggKey }}"
            - name: FMC_API_KEY
              value: "{{ .Values.env.fmcApiKey }}"
            - name: FMC_SCRET_KEY
              value: "{{ .Values.env.fmcSecretKey }}"
            - name: VJ_USERNAME
              value: "{{ .Values.env.vjUserName }}"
            - name: VJ_PASSWORD
              value: "{{ .Values.env.vjPassword }}"
            - name: VJ_URL
              value: "{{ .Values.env.vjUrl }}"
            - name: EMAIL_HEYOTRIP
              value: "{{ .Values.env.emailHeyotrip }}"
            - name: IS_PRODUCTION
              value: "{{ .Values.env.isProduction }}"
            - name: ADMIN_API_URL
              value: "{{ .Values.env.adminAPIUrl }}"
            - name: SENDER_EMAIL
              value: "{{ .Values.env.senderEmail }}"
            - name: SENDER_PASSWORD
              value: "{{ .Values.env.senderPassowrd }}"
            - name: CARD_HOLDER_NAME
              value: "{{ .Values.env.cardHolderName }}"
            - name: CARD_SURNAME
              value: "{{ .Values.env.cardSurname }}"
            - name: CARD_FIRST_NAME
              value: "{{ .Values.env.cardFirstName }}"
            - name: HOTEL_1A_AMADEUS_WSAP
              value: "{{ .Values.env.hotel1aAmadeusWsap }}"
            - name: HOTEL_1A_AMADEUS_OID
              value: "{{ .Values.env.hotel1aAmadeusOid }}"
            - name: HOTEL_1A_AMADEUS_USER
              value: "{{ .Values.env.hotel1aAmadeusUser }}"
            - name: HOTEL_1A_AMADEUS_ORGANIZATION
              value: "{{ .Values.env.hotel1aAmadeusOrganization }}"
            - name: HOTEL_1A_AMADEUS_PRODUCT
              value: "{{ .Values.env.hotel1aAmadeusProduct }}"
            - name: HOTEL_1A_AMADEUS_PASSWORD
              value: "{{ .Values.env.hotel1aAmadeusPassword }}"
            - name: HOTEL_1A_AMADEUS_URL
              value: "{{ .Values.env.hotel1aAmadeusUrl }}"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
